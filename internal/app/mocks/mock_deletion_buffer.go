// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tmitry/shorturl/internal/app/utils (interfaces: DeletionBuffer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	models "github.com/tmitry/shorturl/internal/app/models"
)

// MockDeletionBuffer is a mock of DeletionBuffer interface.
type MockDeletionBuffer struct {
	ctrl     *gomock.Controller
	recorder *MockDeletionBufferMockRecorder
}

// MockDeletionBufferMockRecorder is the mock recorder for MockDeletionBuffer.
type MockDeletionBufferMockRecorder struct {
	mock *MockDeletionBuffer
}

// NewMockDeletionBuffer creates a new mock instance.
func NewMockDeletionBuffer(ctrl *gomock.Controller) *MockDeletionBuffer {
	mock := &MockDeletionBuffer{ctrl: ctrl}
	mock.recorder = &MockDeletionBufferMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeletionBuffer) EXPECT() *MockDeletionBufferMockRecorder {
	return m.recorder
}

// Push mocks base method.
func (m *MockDeletionBuffer) Push(arg0 []models.UID, arg1 uuid.UUID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Push", arg0, arg1)
}

// Push indicates an expected call of Push.
func (mr *MockDeletionBufferMockRecorder) Push(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Push", reflect.TypeOf((*MockDeletionBuffer)(nil).Push), arg0, arg1)
}
